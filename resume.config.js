module.exports = {
  //个人介绍配置项
  introduce: "本人从事Java开发工作5年，有4年大型分布式项目开发经验，熟悉常用框架:SpringBoot、SpringCloud，熟悉Dubbo、Mybatis、Hibernate、Redis、RabbitMq、Kafka等等常用技术。作为项目核心开发，有带领新人经验，热爱技术、乐于分享、抗压能力强，注重团队协作。",
  //技能配置项
  technologies:[
    "熟悉java语言、熟悉常用框架：SpringBoot、SpringCloud、SpringMVC等",
    "熟悉使用常用互联网技术：Dubbo、Mybatis、Hibernate、Redis、RabbitMq、Kafka等",
    "熟悉使用Oracle和MySQL，分析SQL性能并优化",
    "熟悉使用常见前端技术JavaScript及Es6特性规范、React生态框架",
    "熟悉HTTP、TCP、UDP等网络协议",
    "了解JVM原理及调优",
    "了解Groovy语言，Gralis框架",
    "掌握Git团队开发工具",
    "热爱技术、乐于分享、抗压能力强"
  ],
  //技术工具配置项
  tools:[
    "拥有5年发开发经验，其中有4年高并发、高可用系统开发经验。前后参与随行付二维码交易、火币账户系统的开发和维护",
    "在随行付任职期间参与二维码交易开发维护，系统交易量从开始40万笔每天到600万笔每天，SLA从99.9% 提升到99.99%",
    "有高性能、高可用、服务化的开发经验，在火币任职期间参与账户事务拆分、账户分库分表、账户服务化开发。95线撤单解冻5ms，非交易类账户操作99线20ms内。单机RPS达到2k",
    "有责任心，抗压能力强，在火币任职期间主导负责逐仓杠杆业务拆分的开发工作，协商业务方、dba、运营完成数据迁移和db切换，设计和实现拆分方案。分部切换计息、爆仓、补偿等流量，平滑将系统交接给业务部门，降低核心系统复杂度，减少研发中心成本",
  ],
  //工作经历配置项
  experiences: [
    {
      companyName: "火币网",
      position: "高级Java开发工程师",
      dateRanges: "2020.03-至今",
      explain: "对接事业部门研发，负责杠杆业务: ETP、逐仓、全仓的日常开发和维护，持续优化账户系统、划转系统，保证系统高可用"
    },
    {
      companyName: "随行付支付有限公司",
      position: "高级Java开发工程师",
      dateRanges: "2016.07-2020.03",
      explain: "负责二维码交易系统的设计和日常需求开发。持续改进系统，系统调优、架构优化，保证系统的稳定性和可拓展性。带领初中级开发完成日常开发任务，保证新人的快速融入和快速成长。配合其他部门项目研发。"
    },
  ],
  //项目经验配置项
  project: [
    {
      projectNum: "项目一",
      projectName: "账户事务拆分、账户分库、账户服务化",
      projectType: "系统架构演进优化",
      projectDesc: "账户业务之前跟订单、清算、划转及业务动账混在一起的一个超大单体应用，面对牛市陡增的流量，到系统最大承载能力的风险越来越大。此次账户架构升级分为3步：1.  账户事务拆分：不影响业务的前提下，先将账户表操作和业务表操作的事务独立出来，才能进行分库，结合业务实际情况，利用状态机保证业务操作和账户操作可以达到最终一致性。2.  账户分库：以用户ID作为分片字段，其中热点用户使用回形针算法将分散在16个账户库中。分布式事务上，采用TCC设计加业务灵活配置保证事务的最终一致性，对于需要扫描账户表的定时任务使用强路由对单个库进行扫描。3.  账户服务化：使用Dubbo进行服务治理，将账户操作全部封装成接口提供给客户端，前期做好降级处理。并采用白名单方式进行逐步迁移。",
      skillDesc: "使用Sharding-Sphere分库，使用TCC设计解决分布式事务的最终一致性，使用UidGenerator解决分布式ID，使用Dubbo进行服务治理。交易类撤单95线解冻耗时5ms,非交易类账户操作控制在20ms内。单机RPS达到2k",
      responsibilityDesc: "参与账户系统拆分独立服务过程中的开发和设计，保证账户系统稳定",
    },
    {
      projectNum: "项目二",
      projectName: "逐仓系统拆分",
      projectType: "系统拆分",
      projectDesc: "将逐仓业务从核心清算系统中剥离出来并交接给相应业务部门维护。主要分两步：1.	将存量数据从现有数据库迁移到新数据库中，采用Binlog同步加开关实时动态切换数据源，将锁表影响缩小到秒级别，完成实时数据迁移。2.	将逐仓业务剥离出来独立部署，将逐仓业务表和中台业务表事务拆分开，并其中的账户操作调用账户接口实现，同时做好补偿措施。逐步放量上线，根据Version进行数据隔离保证新老系统不会重复操作同一条数据。平滑完成逐仓系统拆分迁移。",
      skillDesc: "团队沟通、方案设计、事务拆分及补偿",
      responsibilityDesc: "主导并设计逐仓系统拆分方案，并开发落地实施",
    },
    {
      projectNum: "项目三",
      projectName: "中台二维码通道系统",
      projectType: "Api平台项目",
      projectDesc: "负责接入银联、网联、微信、支付宝上游接口，将不同上游的相同功能接口封装成统一接口给交易系统，并将支付结果及时推送给交易系统。此系统分为3个服务:1.	Channel: 为交易系统提供接口服务，根据指定通道和交易类型，封装请求参数请求上游接口。是整个通道及系统的入口。2.	Batch:  主要提供针对各种异常情况的补偿功能，例如上游回调故障，此服务会主动调用Channel服务去查询交易结果，及时拿到交易结果。3.	Notification: 此服务主要接受上游的异步回调通知，并为Batch服务提供交易结果推送接口。是整个通道系统的出口。",
      skillDesc: "框架上采用SpringCloud全家桶，使用eureka进行服务治理，SpringCloud Config进行统一配置管理， Ribbon + Fegin配置实现服务调用的负载均衡，Hystrix配置保证服务高可用，结合Groovy提升开发效率。构建工具使用Gradle",
      responsibilityDesc: "参与重构和设计，负责日常需求开发和维护",
    },
    {
      projectNum: "项目四",
      projectName: "中台轻量化二维码交易系统",
      projectType: "Api平台项目",
      projectDesc: "轻量化二维码交易系统。将二维码交易系统对其他系统依赖降到最低，同时缩短交易的主流程，并对必要的依赖系统进行降级处理，将查询、反交易、正交易隔离，保证二维码交易功能高可用 。此系统服务主要分为：正交易服务、交易查询服务和回调服务、反交易服务、后置处理服务。将非阻断流程如记账、交易结果消息推送等放入后处理模块处理",
      skillDesc: "框架上采用SpringCloud全家桶，交易结果通过Kafka推送给风控，Mq推送给其他业务系统。单机TPS从100提升至440。SLA提升至99.99%。",
      responsibilityDesc: "负责二维码交易系统的开发和维护，持续改进系统，保证二维码系统的高可用。",
    },
    {
      projectNum: "项目五",
      projectName: "统一门户系统",
      projectType: "OA平台项目",
      projectDesc: "统一门户系统，帮助业务同学实现“一次登陆，全部可用”。极大提高业务同学的办公效率。统一管理各个系统权限，使各部门开发只关注业务开发，不用关心权限管理，减少开发成本。",
      skillDesc: "前后端分离项目，前端采用React生态框架及工具： Babel、webpack、Router、ESLint、Less搭配前端UI AntDesgin进行前端开发。通过Iframe标签将其他管理系统页面嵌入。后端采用SringBoot框架提供符合RestFul API规范的增删改查接口。登陆校验通过时将权限信息存入Redis中，并根据随机数和SignKey生成token存入请求同头中。通过拦截器拦截请求获取请求头中token校验当前用户是否有权限。",
      responsibilityDesc: "负责门户管理主要功能开发如：角色、权限、白名单等功能，推进门户系统成功落地，协助各部门管理系统接入门户。",
    }
  ]
}